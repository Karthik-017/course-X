generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  firstName String
  lastName  String
  email     String     @unique
  password  String
  phone      String   
  bio        String?
  purchases Purchase[]
  createdAt DateTime   @default(now())
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  courses   Course[] @relation("AdminCourses")
}

model Course {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  imageUrl    String
  price       Float
  creatorId   Int
  creator     Admin      @relation("AdminCourses", fields: [creatorId], references: [id])
  purchases   Purchase[]
  sections    Section[] 
  createdAt   DateTime  @default(now()) // This relation needs to be migrated
}

model Section {
  id        Int       @id @default(autoincrement())
  title     String
  order     Int       
  courseId  Int
  course    Course    @relation(fields: [courseId], references: [id], onDelete: Cascade)
  contents  Content[] 
}

model Content {
  id        Int       @id @default(autoincrement())
  title     String
  type      String    // e.g., "video", "text", "quiz"
  url       String?   // URL for videos
  text      String?   // For text content
  duration  Int?      // Duration in minutes for videos
  order     Int       // To maintain content order within a section
  sectionId Int
  section   Section   @relation(fields: [sectionId], references: [id], onDelete: Cascade)
}

model Purchase {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  course    Course  @relation(fields: [courseId], references: [id], onDelete: Cascade)
  courseId Int
}
